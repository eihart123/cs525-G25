/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { exit } from "node:process";
import { fileURLToPath } from "node:url";
import { Graph } from "../building/graph.js";
import { ProjectBuilder } from "../building/project-builder.js";
import { Project } from "../building/project.js";
import { Package } from "../util/package.js";
let compilationEnsured;
async function ensureCompiled(path) {
  if (path.startsWith("file:")) {
    path = fileURLToPath(path);
  }
  const pkg = Package.forPath(path);
  let format;
  if (!pkg.hasSrc) {
    format = "none";
  } else if (pkg.supportsEsm) {
    format = "esm";
  } else if (pkg.supportsCjs) {
    format = "cjs";
  } else {
    console.error("Error: Could not identify project format");
    exit(2);
  }
  if (compilationEnsured == pkg) {
    return { pkg, format };
  }
  const isDevelopment = !path.match(/[\\/]node_modules[\\/]/);
  if (isDevelopment && format !== "none") {
    const builder = new ProjectBuilder();
    const dependencies = await Graph.forProject(path);
    if (dependencies) {
      await dependencies.build(builder, false);
    } else {
      const project = new Project(pkg);
      await builder.build(project);
    }
  }
  compilationEnsured = pkg;
  return { pkg, format };
}
export {
  ensureCompiled
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL3J1bm5pbmcvZW5zdXJlLWNvbXBpbGVkLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMi0yMDI1IE1hdHRlci5qcyBBdXRob3JzXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IGV4aXQgfSBmcm9tIFwibm9kZTpwcm9jZXNzXCI7XG5pbXBvcnQgeyBmaWxlVVJMVG9QYXRoIH0gZnJvbSBcIm5vZGU6dXJsXCI7XG5pbXBvcnQgeyBHcmFwaCB9IGZyb20gXCIuLi9idWlsZGluZy9ncmFwaC5qc1wiO1xuaW1wb3J0IHsgUHJvamVjdEJ1aWxkZXIgfSBmcm9tIFwiLi4vYnVpbGRpbmcvcHJvamVjdC1idWlsZGVyLmpzXCI7XG5pbXBvcnQgeyBQcm9qZWN0IH0gZnJvbSBcIi4uL2J1aWxkaW5nL3Byb2plY3QuanNcIjtcbmltcG9ydCB7IFBhY2thZ2UgfSBmcm9tIFwiLi4vdXRpbC9wYWNrYWdlLmpzXCI7XG5cbmxldCBjb21waWxhdGlvbkVuc3VyZWQ6IHVuZGVmaW5lZCB8IFBhY2thZ2U7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBlbnN1cmVDb21waWxlZChwYXRoOiBzdHJpbmcpIHtcbiAgICBpZiAocGF0aC5zdGFydHNXaXRoKFwiZmlsZTpcIikpIHtcbiAgICAgICAgcGF0aCA9IGZpbGVVUkxUb1BhdGgocGF0aCk7XG4gICAgfVxuXG4gICAgY29uc3QgcGtnID0gUGFja2FnZS5mb3JQYXRoKHBhdGgpO1xuXG4gICAgbGV0IGZvcm1hdDogXCJlc21cIiB8IFwiY2pzXCIgfCBcIm5vbmVcIjtcbiAgICBpZiAoIXBrZy5oYXNTcmMpIHtcbiAgICAgICAgZm9ybWF0ID0gXCJub25lXCI7XG4gICAgfSBlbHNlIGlmIChwa2cuc3VwcG9ydHNFc20pIHtcbiAgICAgICAgZm9ybWF0ID0gXCJlc21cIjtcbiAgICB9IGVsc2UgaWYgKHBrZy5zdXBwb3J0c0Nqcykge1xuICAgICAgICBmb3JtYXQgPSBcImNqc1wiO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvcjogQ291bGQgbm90IGlkZW50aWZ5IHByb2plY3QgZm9ybWF0XCIpO1xuICAgICAgICBleGl0KDIpO1xuICAgIH1cblxuICAgIGlmIChjb21waWxhdGlvbkVuc3VyZWQgPT0gcGtnKSB7XG4gICAgICAgIHJldHVybiB7IHBrZywgZm9ybWF0IH07XG4gICAgfVxuXG4gICAgLy8gSW4gZGV2ZWxvcG1lbnQgd2UgY3VycmVudGx5IGJ1aWxkIHBhY2thZ2UgYW5kIGRlcGVuZGVuY2llcyB1bmNvbmRpdGlvbmFsbHkgYmVmb3JlIHJ1bm5pbmdcbiAgICBjb25zdCBpc0RldmVsb3BtZW50ID0gIXBhdGgubWF0Y2goL1tcXFxcL11ub2RlX21vZHVsZXNbXFxcXC9dLyk7XG4gICAgaWYgKGlzRGV2ZWxvcG1lbnQgJiYgZm9ybWF0ICE9PSBcIm5vbmVcIikge1xuICAgICAgICBjb25zdCBidWlsZGVyID0gbmV3IFByb2plY3RCdWlsZGVyKCk7XG4gICAgICAgIGNvbnN0IGRlcGVuZGVuY2llcyA9IGF3YWl0IEdyYXBoLmZvclByb2plY3QocGF0aCk7XG4gICAgICAgIGlmIChkZXBlbmRlbmNpZXMpIHtcbiAgICAgICAgICAgIC8vIFByb2plY3QgaXMgaW4gYSB3b3Jrc3BhY2U7IGJ1aWxkIGFsb25nIHdpdGggZGVwZW5kZW5jaWVzIGZyb20gdGhlIHNhbWUgd29ya3NwYWNlXG4gICAgICAgICAgICBhd2FpdCBkZXBlbmRlbmNpZXMuYnVpbGQoYnVpbGRlciwgZmFsc2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gUHJvamVjdCBpcyBub3QgaW4gYSB3b3Jrc3BhY2U7IG9ubHkgYnVpbGQgdGhlIHByb2plY3RcbiAgICAgICAgICAgIGNvbnN0IHByb2plY3QgPSBuZXcgUHJvamVjdChwa2cpO1xuICAgICAgICAgICAgYXdhaXQgYnVpbGRlci5idWlsZChwcm9qZWN0KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbXBpbGF0aW9uRW5zdXJlZCA9IHBrZztcblxuICAgIHJldHVybiB7IHBrZywgZm9ybWF0IH07XG59XG4iXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBTUEsU0FBUyxZQUFZO0FBQ3JCLFNBQVMscUJBQXFCO0FBQzlCLFNBQVMsYUFBYTtBQUN0QixTQUFTLHNCQUFzQjtBQUMvQixTQUFTLGVBQWU7QUFDeEIsU0FBUyxlQUFlO0FBRXhCLElBQUk7QUFFSixlQUFzQixlQUFlLE1BQWM7QUFDL0MsTUFBSSxLQUFLLFdBQVcsT0FBTyxHQUFHO0FBQzFCLFdBQU8sY0FBYyxJQUFJO0FBQUEsRUFDN0I7QUFFQSxRQUFNLE1BQU0sUUFBUSxRQUFRLElBQUk7QUFFaEMsTUFBSTtBQUNKLE1BQUksQ0FBQyxJQUFJLFFBQVE7QUFDYixhQUFTO0FBQUEsRUFDYixXQUFXLElBQUksYUFBYTtBQUN4QixhQUFTO0FBQUEsRUFDYixXQUFXLElBQUksYUFBYTtBQUN4QixhQUFTO0FBQUEsRUFDYixPQUFPO0FBQ0gsWUFBUSxNQUFNLDBDQUEwQztBQUN4RCxTQUFLLENBQUM7QUFBQSxFQUNWO0FBRUEsTUFBSSxzQkFBc0IsS0FBSztBQUMzQixXQUFPLEVBQUUsS0FBSyxPQUFPO0FBQUEsRUFDekI7QUFHQSxRQUFNLGdCQUFnQixDQUFDLEtBQUssTUFBTSx3QkFBd0I7QUFDMUQsTUFBSSxpQkFBaUIsV0FBVyxRQUFRO0FBQ3BDLFVBQU0sVUFBVSxJQUFJLGVBQWU7QUFDbkMsVUFBTSxlQUFlLE1BQU0sTUFBTSxXQUFXLElBQUk7QUFDaEQsUUFBSSxjQUFjO0FBRWQsWUFBTSxhQUFhLE1BQU0sU0FBUyxLQUFLO0FBQUEsSUFDM0MsT0FBTztBQUVILFlBQU0sVUFBVSxJQUFJLFFBQVEsR0FBRztBQUMvQixZQUFNLFFBQVEsTUFBTSxPQUFPO0FBQUEsSUFDL0I7QUFBQSxFQUNKO0FBRUEsdUJBQXFCO0FBRXJCLFNBQU8sRUFBRSxLQUFLLE9BQU87QUFDekI7IiwKICAibmFtZXMiOiBbXQp9Cg==
