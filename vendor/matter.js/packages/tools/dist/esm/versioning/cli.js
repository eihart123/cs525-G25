/**
 * @license
 * Copyright 2022-2025 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { commander } from "../util/commander.js";
import { Package } from "../util/package.js";
import { Progress } from "../util/progress.js";
import { Versioner } from "./versioner.js";
async function main(argv = process.argv) {
  const program = commander("matter-version", "Manipulate monorepo package versions.").argument("[version]").option("-p, --prefix <prefix>", "specify monorepo directory").option("-s, --set", "sets the release version").option("-a, --apply", "sets package versions to the release version").option("-t, --tag", "adds git tag for release version").parse(argv);
  const args = program.opts();
  args.version = program.args[0];
  const version = args.version;
  const pkg = new Package({ path: args.prefix });
  const versioner = new Versioner(pkg, version);
  const progress = new Progress();
  progress.startup(`Release ${versioner.version}`, versioner.pkg);
  if (args.set) {
    await progress.run(`Set version to ${progress.emphasize(versioner.version)}`, () => versioner.set());
  }
  if (args.apply) {
    await versioner.apply(progress);
  }
  if (args.tag) {
    await progress.run(`Tagging version ${progress.emphasize(versioner.version)}`, () => versioner.tag());
  }
  progress.close();
}
export {
  main
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL3ZlcnNpb25pbmcvY2xpLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMi0yMDI1IE1hdHRlci5qcyBBdXRob3JzXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IGNvbW1hbmRlciB9IGZyb20gXCIuLi91dGlsL2NvbW1hbmRlci5qc1wiO1xuaW1wb3J0IHsgUGFja2FnZSB9IGZyb20gXCIuLi91dGlsL3BhY2thZ2UuanNcIjtcbmltcG9ydCB7IFByb2dyZXNzIH0gZnJvbSBcIi4uL3V0aWwvcHJvZ3Jlc3MuanNcIjtcbmltcG9ydCB7IFZlcnNpb25lciB9IGZyb20gXCIuL3ZlcnNpb25lci5qc1wiO1xuXG5pbnRlcmZhY2UgQXJncyB7XG4gICAgdmVyc2lvbj86IHN0cmluZztcbiAgICBwcmVmaXg/OiBzdHJpbmc7XG4gICAgc2V0PzogYm9vbGVhbjtcbiAgICBhcHBseT86IGJvb2xlYW47XG4gICAgdGFnPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4oYXJndiA9IHByb2Nlc3MuYXJndikge1xuICAgIGNvbnN0IHByb2dyYW0gPSBjb21tYW5kZXIoXCJtYXR0ZXItdmVyc2lvblwiLCBcIk1hbmlwdWxhdGUgbW9ub3JlcG8gcGFja2FnZSB2ZXJzaW9ucy5cIilcbiAgICAgICAgLmFyZ3VtZW50KFwiW3ZlcnNpb25dXCIpXG4gICAgICAgIC5vcHRpb24oXCItcCwgLS1wcmVmaXggPHByZWZpeD5cIiwgXCJzcGVjaWZ5IG1vbm9yZXBvIGRpcmVjdG9yeVwiKVxuICAgICAgICAub3B0aW9uKFwiLXMsIC0tc2V0XCIsIFwic2V0cyB0aGUgcmVsZWFzZSB2ZXJzaW9uXCIpXG4gICAgICAgIC5vcHRpb24oXCItYSwgLS1hcHBseVwiLCBcInNldHMgcGFja2FnZSB2ZXJzaW9ucyB0byB0aGUgcmVsZWFzZSB2ZXJzaW9uXCIpXG4gICAgICAgIC5vcHRpb24oXCItdCwgLS10YWdcIiwgXCJhZGRzIGdpdCB0YWcgZm9yIHJlbGVhc2UgdmVyc2lvblwiKVxuICAgICAgICAucGFyc2UoYXJndik7XG5cbiAgICBjb25zdCBhcmdzID0gcHJvZ3JhbS5vcHRzPEFyZ3M+KCk7XG4gICAgYXJncy52ZXJzaW9uID0gcHJvZ3JhbS5hcmdzWzBdO1xuXG4gICAgY29uc3QgdmVyc2lvbiA9IGFyZ3MudmVyc2lvbjtcbiAgICBjb25zdCBwa2cgPSBuZXcgUGFja2FnZSh7IHBhdGg6IGFyZ3MucHJlZml4IH0pO1xuICAgIGNvbnN0IHZlcnNpb25lciA9IG5ldyBWZXJzaW9uZXIocGtnLCB2ZXJzaW9uKTtcblxuICAgIGNvbnN0IHByb2dyZXNzID0gbmV3IFByb2dyZXNzKCk7XG5cbiAgICBwcm9ncmVzcy5zdGFydHVwKGBSZWxlYXNlICR7dmVyc2lvbmVyLnZlcnNpb259YCwgdmVyc2lvbmVyLnBrZyk7XG4gICAgaWYgKGFyZ3Muc2V0KSB7XG4gICAgICAgIGF3YWl0IHByb2dyZXNzLnJ1bihgU2V0IHZlcnNpb24gdG8gJHtwcm9ncmVzcy5lbXBoYXNpemUodmVyc2lvbmVyLnZlcnNpb24pfWAsICgpID0+IHZlcnNpb25lci5zZXQoKSk7XG4gICAgfVxuXG4gICAgaWYgKGFyZ3MuYXBwbHkpIHtcbiAgICAgICAgYXdhaXQgdmVyc2lvbmVyLmFwcGx5KHByb2dyZXNzKTtcbiAgICB9XG5cbiAgICBpZiAoYXJncy50YWcpIHtcbiAgICAgICAgYXdhaXQgcHJvZ3Jlc3MucnVuKGBUYWdnaW5nIHZlcnNpb24gJHtwcm9ncmVzcy5lbXBoYXNpemUodmVyc2lvbmVyLnZlcnNpb24pfWAsICgpID0+IHZlcnNpb25lci50YWcoKSk7XG4gICAgfVxuXG4gICAgcHJvZ3Jlc3MuY2xvc2UoKTtcbn1cbiJdLAogICJtYXBwaW5ncyI6ICJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFNQSxTQUFTLGlCQUFpQjtBQUMxQixTQUFTLGVBQWU7QUFDeEIsU0FBUyxnQkFBZ0I7QUFDekIsU0FBUyxpQkFBaUI7QUFVMUIsZUFBc0IsS0FBSyxPQUFPLFFBQVEsTUFBTTtBQUM1QyxRQUFNLFVBQVUsVUFBVSxrQkFBa0IsdUNBQXVDLEVBQzlFLFNBQVMsV0FBVyxFQUNwQixPQUFPLHlCQUF5Qiw0QkFBNEIsRUFDNUQsT0FBTyxhQUFhLDBCQUEwQixFQUM5QyxPQUFPLGVBQWUsOENBQThDLEVBQ3BFLE9BQU8sYUFBYSxrQ0FBa0MsRUFDdEQsTUFBTSxJQUFJO0FBRWYsUUFBTSxPQUFPLFFBQVEsS0FBVztBQUNoQyxPQUFLLFVBQVUsUUFBUSxLQUFLLENBQUM7QUFFN0IsUUFBTSxVQUFVLEtBQUs7QUFDckIsUUFBTSxNQUFNLElBQUksUUFBUSxFQUFFLE1BQU0sS0FBSyxPQUFPLENBQUM7QUFDN0MsUUFBTSxZQUFZLElBQUksVUFBVSxLQUFLLE9BQU87QUFFNUMsUUFBTSxXQUFXLElBQUksU0FBUztBQUU5QixXQUFTLFFBQVEsV0FBVyxVQUFVLE9BQU8sSUFBSSxVQUFVLEdBQUc7QUFDOUQsTUFBSSxLQUFLLEtBQUs7QUFDVixVQUFNLFNBQVMsSUFBSSxrQkFBa0IsU0FBUyxVQUFVLFVBQVUsT0FBTyxDQUFDLElBQUksTUFBTSxVQUFVLElBQUksQ0FBQztBQUFBLEVBQ3ZHO0FBRUEsTUFBSSxLQUFLLE9BQU87QUFDWixVQUFNLFVBQVUsTUFBTSxRQUFRO0FBQUEsRUFDbEM7QUFFQSxNQUFJLEtBQUssS0FBSztBQUNWLFVBQU0sU0FBUyxJQUFJLG1CQUFtQixTQUFTLFVBQVUsVUFBVSxPQUFPLENBQUMsSUFBSSxNQUFNLFVBQVUsSUFBSSxDQUFDO0FBQUEsRUFDeEc7QUFFQSxXQUFTLE1BQU07QUFDbkI7IiwKICAibmFtZXMiOiBbXQp9Cg==
